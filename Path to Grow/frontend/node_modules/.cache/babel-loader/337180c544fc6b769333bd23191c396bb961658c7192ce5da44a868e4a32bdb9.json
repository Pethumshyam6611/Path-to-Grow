{"ast":null,"code":"var _jsxFileName = \"F:\\\\Final Semester\\\\Disertation Project\\\\Path to Grow\\\\frontend\\\\src\\\\pages\\\\CvAnalysis.js\",\n  _s = $RefreshSig$();\n// CvAnalysis.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Container, Button, Form, Spinner, Card, Row, Col, Alert } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsPDF } from \"jspdf\";\nimport { Chart } from \"react-google-charts\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CvAnalysis = () => {\n  _s();\n  var _user$firstName, _user$lastName;\n  const navigate = useNavigate();\n  const cvChartRef = useRef(null);\n  const [user, setUser] = useState(null);\n  const [cvFile, setCvFile] = useState(null);\n  const [jobPosting, setJobPosting] = useState(\"\");\n  const [cvLoading, setCvLoading] = useState(false);\n  const [cvError, setCvError] = useState(\"\");\n  const [matchScore, setMatchScore] = useState(\"\");\n  const [cvSkillGap, setCvSkillGap] = useState(\"\");\n  const [cvRecommendations, setCvRecommendations] = useState(\"\");\n  const [suggestedJobs, setSuggestedJobs] = useState([]); // New state for suggested job postings\n  const [cvSkillGapData, setCvSkillGapData] = useState({\n    current: [],\n    required: [],\n    skills: []\n  });\n  const [cvChartReady, setCvChartReady] = useState(false);\n  useEffect(() => {\n    const userData = JSON.parse(localStorage.getItem(\"user\"));\n    const token = localStorage.getItem(\"token\");\n    if (!token || !userData) {\n      alert(\"Please log in first!\");\n      navigate(\"/\");\n    }\n    setUser(userData);\n  }, [navigate]);\n  const handleCvFileChange = e => {\n    setCvFile(e.target.files[0]);\n  };\n  const handleJobPostingChange = e => {\n    setJobPosting(e.target.value);\n  };\n  const handleCvAnalysis = async e => {\n    e.preventDefault();\n    if (!cvFile || !jobPosting) {\n      setCvError(\"Please upload a CV and provide a job posting.\");\n      return;\n    }\n    setCvLoading(true);\n    setCvError(\"\");\n    setMatchScore(\"\");\n    setCvSkillGap(\"\");\n    setCvRecommendations(\"\");\n    setSuggestedJobs([]); // Reset suggested jobs\n    setCvSkillGapData({\n      current: [],\n      required: [],\n      skills: []\n    });\n    setCvChartReady(false);\n    const formData = new FormData();\n    formData.append(\"cv\", cvFile);\n    formData.append(\"jobPosting\", jobPosting);\n    try {\n      console.log(\"Sending CV analysis request...\");\n      const response = await axios.post(\"http://localhost:5000/cv/cv-analysis\", formData, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      const text = response.data.cvAnalysis;\n      console.log(\"Raw CV Analysis Response:\", text);\n      const sections = text.split(\"###\").map(section => section.trim()).filter(Boolean);\n      sections.forEach(section => {\n        if (section.startsWith(\"Match Score\")) {\n          setMatchScore(section.replace(\"Match Score\", \"\").trim());\n        } else if (section.startsWith(\"Skill Gap\")) {\n          setCvSkillGap(section.replace(\"Skill Gap\", \"\").trim());\n          parseSkillGap(section);\n        } else if (section.startsWith(\"Recommendations\")) {\n          setCvRecommendations(section.replace(\"Recommendations\", \"\").trim());\n        } else if (section.startsWith(\"Suggested Job Postings\")) {\n          parseSuggestedJobs(section);\n        }\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setCvError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error analyzing CV.\");\n    } finally {\n      setCvLoading(false);\n    }\n  };\n  const parseSkillGap = text => {\n    console.log(\"Raw Skill Gap Section:\", text);\n    const lines = text.split(\"\\n\").filter(line => line.trim() !== \"\" && line.includes(\"%\"));\n    const skills = [];\n    const current = [];\n    const required = [];\n    lines.forEach(line => {\n      let match = line.match(/([^-\\n]+)\\s*-\\s*Current:\\s*(\\d+)%\\s*Required:\\s*(\\d+)%/i);\n      if (match) {\n        skills.push(match[1].trim());\n        current.push(parseInt(match[2]));\n        required.push(parseInt(match[3]));\n      } else {\n        match = line.match(/\\[?\\s*([^\\|\\[\\]\\*]+)\\s*\\[?\\s*(\\d+)\\s*\\|\\s*(\\d+)\\s*\\|/);\n        if (match) {\n          skills.push(match[1].trim());\n          current.push(parseInt(match[2]));\n          required.push(parseInt(match[3]));\n        }\n      }\n    });\n    setCvSkillGapData({\n      skills,\n      current,\n      required\n    });\n    console.log(\"Parsed CV Skill Gap Data:\", {\n      skills,\n      current,\n      required\n    });\n  };\n  const parseSuggestedJobs = text => {\n    console.log(\"Raw Suggested Job Postings Section:\", text);\n    const lines = text.replace(\"Suggested Job Postings\", \"\").split(\"\\n\").filter(line => line.trim() !== \"\");\n    const jobs = lines.map(line => {\n      const [title, description] = line.split(\" - \");\n      return {\n        title: title.trim(),\n        description: description.trim()\n      };\n    });\n    setSuggestedJobs(jobs);\n    console.log(\"Parsed Suggested Job Postings:\", jobs);\n  };\n  const handleCvReset = () => {\n    setCvFile(null);\n    setJobPosting(\"\");\n    setMatchScore(\"\");\n    setCvSkillGap(\"\");\n    setCvRecommendations(\"\");\n    setSuggestedJobs([]); // Reset suggested jobs\n    setCvSkillGapData({\n      current: [],\n      required: [],\n      skills: []\n    });\n    setCvError(\"\");\n    setCvChartReady(false);\n  };\n  const downloadPDF = () => {\n    if (cvSkillGapData.skills.length > 0 && !cvChartReady) {\n      console.error(\"CV Chart is not ready yet. Please wait for the chart to render.\");\n      alert(\"Please wait for the chart to render before downloading the PDF.\");\n      return;\n    }\n    const doc = new jsPDF(\"p\", \"mm\", \"a4\");\n    const pageWidth = doc.internal.pageSize.getWidth();\n    const pageHeight = doc.internal.pageSize.getHeight();\n    const margin = 15;\n    const maxWidth = pageWidth - 2 * margin;\n    let yOffset = margin;\n    const addSection = (title, content, fontSize = 12) => {\n      doc.setFont(\"helvetica\", \"bold\");\n      doc.setFontSize(16);\n      doc.setTextColor(0, 102, 204);\n      if (yOffset + 20 > pageHeight - margin) {\n        doc.addPage();\n        yOffset = margin;\n      }\n      doc.text(title, margin, yOffset);\n      yOffset += 5;\n      doc.setLineWidth(0.5);\n      doc.setDrawColor(0, 102, 204);\n      doc.line(margin, yOffset, pageWidth - margin, yOffset);\n      yOffset += 10;\n      doc.setFont(\"helvetica\", \"normal\");\n      doc.setFontSize(fontSize);\n      doc.setTextColor(0, 0, 0);\n      const splitText = doc.splitTextToSize(content, maxWidth);\n      splitText.forEach(line => {\n        if (yOffset + 10 > pageHeight - margin) {\n          doc.addPage();\n          yOffset = margin;\n        }\n        doc.text(line, margin, yOffset);\n        yOffset += 7;\n      });\n      yOffset += 10;\n    };\n    const addChart = () => {\n      if (cvChartRef.current) {\n        try {\n          const chart = cvChartRef.current.chartInstance.visualization;\n          if (!chart) {\n            throw new Error(\"Chart visualization is not available.\");\n          }\n          const chartImage = chart.getImageURI();\n          if (!chartImage) {\n            throw new Error(\"Chart image URI is not available.\");\n          }\n          if (yOffset + 100 > pageHeight - margin) {\n            doc.addPage();\n            yOffset = margin;\n          }\n          doc.setFont(\"helvetica\", \"bold\");\n          doc.setFontSize(16);\n          doc.setTextColor(0, 102, 204);\n          doc.text(\"CV Skill Gap Chart\", margin, yOffset);\n          yOffset += 10;\n          const chartWidth = maxWidth;\n          const chartHeight = chartWidth * 2 / 3;\n          doc.addImage(chartImage, \"PNG\", margin, yOffset, chartWidth, chartHeight);\n          yOffset += chartHeight + 15;\n        } catch (error) {\n          console.error(\"Error adding CV chart to PDF:\", error);\n          doc.setFont(\"helvetica\", \"normal\");\n          doc.setFontSize(12);\n          doc.setTextColor(255, 0, 0);\n          doc.text(\"Error: Could not include CV Skill Gap Chart in the PDF.\", margin, yOffset);\n          yOffset += 10;\n        }\n      }\n    };\n\n    // Title\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.setFontSize(22);\n    doc.setTextColor(0, 102, 204);\n    doc.text(\"PathToGrow CV Analysis Report\", margin, yOffset);\n    yOffset += 10;\n\n    // Subtitle\n    doc.setFontSize(12);\n    doc.setTextColor(100, 100, 100);\n    doc.text(`Generated for ${user.firstName} ${user.lastName} on ${new Date().toLocaleDateString()}`, margin, yOffset);\n    yOffset += 15;\n    if (matchScore) {\n      addSection(\"CV Match Score\", matchScore);\n    }\n    if (cvSkillGapData.skills.length > 0) {\n      const cvSkillGapText = cvSkillGapData.skills.map((skill, index) => `${skill} - Current: ${cvSkillGapData.current[index]}% Required: ${cvSkillGapData.required[index]}%`).join(\"\\n\");\n      addSection(\"CV Skill Gap\", cvSkillGapText);\n      addChart();\n    }\n    if (cvRecommendations) {\n      addSection(\"CV Recommendations\", cvRecommendations);\n    }\n    if (suggestedJobs.length > 0) {\n      const suggestedJobsText = suggestedJobs.map(job => `${job.title} - ${job.description}`).join(\"\\n\");\n      addSection(\"Suggested Job Postings\", suggestedJobsText);\n    }\n    doc.save(\"cv_analysis_report.pdf\");\n  };\n  const cvChartData = [[\"Skill\", \"Current (%)\", \"Required (%)\"], ...cvSkillGapData.skills.map((skill, index) => [skill, cvSkillGapData.current[index], cvSkillGapData.required[index]])];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-page py-5\",\n    style: {\n      backgroundColor: \"#f8f9fa\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: \"shadow mb-5 border-0 rounded\",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          className: \"p-4\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 2,\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar-placeholder bg-primary rounded-circle d-flex align-items-center justify-content-center mx-auto\",\n                style: {\n                  width: \"80px\",\n                  height: \"80px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"text-white m-0\",\n                  children: [user === null || user === void 0 ? void 0 : (_user$firstName = user.firstName) === null || _user$firstName === void 0 ? void 0 : _user$firstName[0], user === null || user === void 0 ? void 0 : (_user$lastName = user.lastName) === null || _user$lastName === void 0 ? void 0 : _user$lastName[0]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 7,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"fw-bold mb-1\",\n                children: [\"CV Analysis for \", user === null || user === void 0 ? void 0 : user.firstName, \" \", user === null || user === void 0 ? void 0 : user.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-muted mb-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-envelope me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 19\n                }, this), user === null || user === void 0 ? void 0 : user.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              className: \"text-end\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-primary\",\n                className: \"rounded-pill me-2\",\n                onClick: () => navigate(\"/dashboard\"),\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-arrow-left me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 19\n                }, this), \"Back to Dashboard\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"fw-bold\",\n          children: \"CV Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted\",\n          children: \"Upload your CV and provide a job posting to analyze your fit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"shadow border-0 mb-5\",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          className: \"p-4\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleCvAnalysis,\n            children: [cvError && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"danger\",\n              children: cvError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"cvFile\",\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    className: \"fw-bold\",\n                    children: \"Upload Your CV (PDF)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"file\",\n                    accept: \"application/pdf\",\n                    onChange: handleCvFileChange,\n                    className: \"py-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"jobPosting\",\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    className: \"fw-bold\",\n                    children: \"Job Posting\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    rows: 5,\n                    value: jobPosting,\n                    onChange: handleJobPostingChange,\n                    placeholder: \"Paste the job description here...\",\n                    className: \"py-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-secondary\",\n                onClick: handleCvReset,\n                disabled: cvLoading,\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-undo me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 19\n                }, this), \"Reset\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                disabled: cvLoading,\n                children: [cvLoading ? /*#__PURE__*/_jsxDEV(Spinner, {\n                  animation: \"border\",\n                  size: \"sm\",\n                  className: \"me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-file-alt me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 21\n                }, this), \"Analyze CV\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), (matchScore || cvSkillGap || cvRecommendations || suggestedJobs.length > 0) && !cvLoading && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            className: \"mb-4\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"shadow border-0 h-100\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                className: \"bg-purple text-white py-3\",\n                style: {\n                  backgroundColor: \"#6f42c1\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"mb-0 fw-bold\",\n                  children: \"Match Score\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                className: \"p-4\",\n                style: {\n                  minHeight: \"150px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: matchScore\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            className: \"mb-4\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"shadow border-0 h-100\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                className: \"bg-warning text-white py-3\",\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"mb-0 fw-bold\",\n                  children: \"CV Skill Gap\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                className: \"p-4\",\n                style: {\n                  minHeight: \"150px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"list-unstyled\",\n                  children: [cvSkillGapData.skills.map((skill, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"mb-2\",\n                    style: {\n                      fontSize: \"1.1rem\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: skill\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 404,\n                      columnNumber: 27\n                    }, this), \" - Current: \", cvSkillGapData.current[index], \"%, Required: \", cvSkillGapData.required[index], \"%\"]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 25\n                  }, this)), cvSkillGapData.skills.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-muted\",\n                    children: \"No skill gap data available.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: 12,\n            className: \"mb-4\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"shadow border-0 h-100\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                className: \"bg-info text-white py-3\",\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"mb-0 fw-bold\",\n                  children: \"CV Recommendations\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                className: \"p-4\",\n                style: {\n                  overflowY: \"auto\",\n                  minHeight: \"150px\"\n                },\n                children: cvRecommendations.split(\"\\n\").map((line, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mb-2\",\n                  style: {\n                    fontSize: \"1.1rem\"\n                  },\n                  children: line\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, this), suggestedJobs.length > 0 && /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: 12,\n            className: \"mb-4\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"shadow border-0 h-100\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                className: \"bg-success text-white py-3\",\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"mb-0 fw-bold\",\n                  children: \"Suggested Job Postings\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                className: \"p-4\",\n                style: {\n                  overflowY: \"auto\",\n                  minHeight: \"150px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"list-unstyled\",\n                  children: suggestedJobs.map((job, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"mb-2\",\n                    style: {\n                      fontSize: \"1.1rem\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: job.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 444,\n                      columnNumber: 29\n                    }, this), \" - \", job.description]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 443,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-5\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            className: \"text-center\",\n            children: [cvSkillGapData.skills.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"fw-bold\",\n                children: \"CV Skill Gap Analysis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Chart, {\n                ref: cvChartRef,\n                chartType: \"BarChart\",\n                width: \"100%\",\n                height: \"400px\",\n                data: cvChartData,\n                options: {\n                  title: \"CV Skill Gap Analysis\",\n                  chartArea: {\n                    width: \"60%\",\n                    height: \"70%\"\n                  },\n                  hAxis: {\n                    title: \"Skill\",\n                    titleTextStyle: {\n                      color: \"#333\"\n                    },\n                    textStyle: {\n                      fontSize: 12\n                    }\n                  },\n                  vAxis: {\n                    title: \"Percentage (%)\",\n                    minValue: 0,\n                    maxValue: 100,\n                    titleTextStyle: {\n                      color: \"#333\"\n                    }\n                  },\n                  legend: {\n                    position: \"top\",\n                    maxLines: \"2\"\n                  },\n                  colors: [\"#4285f4\", \"#db4437\"],\n                  bar: {\n                    groupWidth: \"75%\"\n                  },\n                  isStacked: false\n                },\n                chartEvents: [{\n                  eventName: \"ready\",\n                  callback: () => {\n                    console.log(\"CV Chart is ready!\");\n                    setCvChartReady(true);\n                  }\n                }]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-muted\",\n              children: \"No CV skill gap data available for chart visualization.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              size: \"lg\",\n              onClick: downloadPDF,\n              className: \"rounded-pill px-5 py-2\",\n              disabled: !matchScore || cvSkillGapData.skills.length > 0 && !cvChartReady,\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-download me-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 19\n              }, this), \"Download Report\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 5\n  }, this);\n};\n_s(CvAnalysis, \"FKVUAnxorebqZw5gHOkSGQK68+0=\", false, function () {\n  return [useNavigate];\n});\n_c = CvAnalysis;\nexport default CvAnalysis;\nvar _c;\n$RefreshReg$(_c, \"CvAnalysis\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Container","Button","Form","Spinner","Card","Row","Col","Alert","useNavigate","axios","jsPDF","Chart","jsxDEV","_jsxDEV","Fragment","_Fragment","CvAnalysis","_s","_user$firstName","_user$lastName","navigate","cvChartRef","user","setUser","cvFile","setCvFile","jobPosting","setJobPosting","cvLoading","setCvLoading","cvError","setCvError","matchScore","setMatchScore","cvSkillGap","setCvSkillGap","cvRecommendations","setCvRecommendations","suggestedJobs","setSuggestedJobs","cvSkillGapData","setCvSkillGapData","current","required","skills","cvChartReady","setCvChartReady","userData","JSON","parse","localStorage","getItem","token","alert","handleCvFileChange","e","target","files","handleJobPostingChange","value","handleCvAnalysis","preventDefault","formData","FormData","append","console","log","response","post","headers","Authorization","text","data","cvAnalysis","sections","split","map","section","trim","filter","Boolean","forEach","startsWith","replace","parseSkillGap","parseSuggestedJobs","error","_error$response","_error$response$data","message","lines","line","includes","match","push","parseInt","jobs","title","description","handleCvReset","downloadPDF","length","doc","pageWidth","internal","pageSize","getWidth","pageHeight","getHeight","margin","maxWidth","yOffset","addSection","content","fontSize","setFont","setFontSize","setTextColor","addPage","setLineWidth","setDrawColor","splitText","splitTextToSize","addChart","chart","chartInstance","visualization","Error","chartImage","getImageURI","chartWidth","chartHeight","addImage","firstName","lastName","Date","toLocaleDateString","cvSkillGapText","skill","index","join","suggestedJobsText","job","save","cvChartData","className","style","backgroundColor","children","Body","md","width","height","fileName","_jsxFileName","lineNumber","columnNumber","email","variant","onClick","onSubmit","Group","controlId","Label","Control","type","accept","onChange","as","rows","placeholder","disabled","animation","size","Header","minHeight","overflowY","ref","chartType","options","chartArea","hAxis","titleTextStyle","color","textStyle","vAxis","minValue","maxValue","legend","position","maxLines","colors","bar","groupWidth","isStacked","chartEvents","eventName","callback","_c","$RefreshReg$"],"sources":["F:/Final Semester/Disertation Project/Path to Grow/frontend/src/pages/CvAnalysis.js"],"sourcesContent":["// CvAnalysis.js\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { Container, Button, Form, Spinner, Card, Row, Col, Alert } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nconst CvAnalysis = () => {\r\n  const navigate = useNavigate();\r\n  const cvChartRef = useRef(null);\r\n  const [user, setUser] = useState(null);\r\n  const [cvFile, setCvFile] = useState(null);\r\n  const [jobPosting, setJobPosting] = useState(\"\");\r\n  const [cvLoading, setCvLoading] = useState(false);\r\n  const [cvError, setCvError] = useState(\"\");\r\n  const [matchScore, setMatchScore] = useState(\"\");\r\n  const [cvSkillGap, setCvSkillGap] = useState(\"\");\r\n  const [cvRecommendations, setCvRecommendations] = useState(\"\");\r\n  const [suggestedJobs, setSuggestedJobs] = useState([]); // New state for suggested job postings\r\n  const [cvSkillGapData, setCvSkillGapData] = useState({ current: [], required: [], skills: [] });\r\n  const [cvChartReady, setCvChartReady] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const userData = JSON.parse(localStorage.getItem(\"user\"));\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    if (!token || !userData) {\r\n      alert(\"Please log in first!\");\r\n      navigate(\"/\");\r\n    }\r\n\r\n    setUser(userData);\r\n  }, [navigate]);\r\n\r\n  const handleCvFileChange = (e) => {\r\n    setCvFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleJobPostingChange = (e) => {\r\n    setJobPosting(e.target.value);\r\n  };\r\n\r\n  const handleCvAnalysis = async (e) => {\r\n    e.preventDefault();\r\n    if (!cvFile || !jobPosting) {\r\n      setCvError(\"Please upload a CV and provide a job posting.\");\r\n      return;\r\n    }\r\n\r\n    setCvLoading(true);\r\n    setCvError(\"\");\r\n    setMatchScore(\"\");\r\n    setCvSkillGap(\"\");\r\n    setCvRecommendations(\"\");\r\n    setSuggestedJobs([]); // Reset suggested jobs\r\n    setCvSkillGapData({ current: [], required: [], skills: [] });\r\n    setCvChartReady(false);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"cv\", cvFile);\r\n    formData.append(\"jobPosting\", jobPosting);\r\n\r\n    try {\r\n      console.log(\"Sending CV analysis request...\");\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/cv/cv-analysis\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n      const text = response.data.cvAnalysis;\r\n      console.log(\"Raw CV Analysis Response:\", text);\r\n\r\n      const sections = text.split(\"###\").map((section) => section.trim()).filter(Boolean);\r\n      sections.forEach((section) => {\r\n        if (section.startsWith(\"Match Score\")) {\r\n          setMatchScore(section.replace(\"Match Score\", \"\").trim());\r\n        } else if (section.startsWith(\"Skill Gap\")) {\r\n          setCvSkillGap(section.replace(\"Skill Gap\", \"\").trim());\r\n          parseSkillGap(section);\r\n        } else if (section.startsWith(\"Recommendations\")) {\r\n          setCvRecommendations(section.replace(\"Recommendations\", \"\").trim());\r\n        } else if (section.startsWith(\"Suggested Job Postings\")) {\r\n          parseSuggestedJobs(section);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      setCvError(error.response?.data?.message || \"Error analyzing CV.\");\r\n    } finally {\r\n      setCvLoading(false);\r\n    }\r\n  };\r\n\r\n  const parseSkillGap = (text) => {\r\n    console.log(\"Raw Skill Gap Section:\", text);\r\n    const lines = text.split(\"\\n\").filter((line) => line.trim() !== \"\" && line.includes(\"%\"));\r\n    const skills = [];\r\n    const current = [];\r\n    const required = [];\r\n\r\n    lines.forEach((line) => {\r\n      let match = line.match(/([^-\\n]+)\\s*-\\s*Current:\\s*(\\d+)%\\s*Required:\\s*(\\d+)%/i);\r\n      if (match) {\r\n        skills.push(match[1].trim());\r\n        current.push(parseInt(match[2]));\r\n        required.push(parseInt(match[3]));\r\n      } else {\r\n        match = line.match(/\\[?\\s*([^\\|\\[\\]\\*]+)\\s*\\[?\\s*(\\d+)\\s*\\|\\s*(\\d+)\\s*\\|/);\r\n        if (match) {\r\n          skills.push(match[1].trim());\r\n          current.push(parseInt(match[2]));\r\n          required.push(parseInt(match[3]));\r\n        }\r\n      }\r\n    });\r\n\r\n    setCvSkillGapData({ skills, current, required });\r\n    console.log(\"Parsed CV Skill Gap Data:\", { skills, current, required });\r\n  };\r\n\r\n  const parseSuggestedJobs = (text) => {\r\n    console.log(\"Raw Suggested Job Postings Section:\", text);\r\n    const lines = text\r\n      .replace(\"Suggested Job Postings\", \"\")\r\n      .split(\"\\n\")\r\n      .filter((line) => line.trim() !== \"\");\r\n    const jobs = lines.map((line) => {\r\n      const [title, description] = line.split(\" - \");\r\n      return { title: title.trim(), description: description.trim() };\r\n    });\r\n    setSuggestedJobs(jobs);\r\n    console.log(\"Parsed Suggested Job Postings:\", jobs);\r\n  };\r\n\r\n  const handleCvReset = () => {\r\n    setCvFile(null);\r\n    setJobPosting(\"\");\r\n    setMatchScore(\"\");\r\n    setCvSkillGap(\"\");\r\n    setCvRecommendations(\"\");\r\n    setSuggestedJobs([]); // Reset suggested jobs\r\n    setCvSkillGapData({ current: [], required: [], skills: [] });\r\n    setCvError(\"\");\r\n    setCvChartReady(false);\r\n  };\r\n\r\n  const downloadPDF = () => {\r\n    if (cvSkillGapData.skills.length > 0 && !cvChartReady) {\r\n      console.error(\"CV Chart is not ready yet. Please wait for the chart to render.\");\r\n      alert(\"Please wait for the chart to render before downloading the PDF.\");\r\n      return;\r\n    }\r\n\r\n    const doc = new jsPDF(\"p\", \"mm\", \"a4\");\r\n    const pageWidth = doc.internal.pageSize.getWidth();\r\n    const pageHeight = doc.internal.pageSize.getHeight();\r\n    const margin = 15;\r\n    const maxWidth = pageWidth - 2 * margin;\r\n\r\n    let yOffset = margin;\r\n\r\n    const addSection = (title, content, fontSize = 12) => {\r\n      doc.setFont(\"helvetica\", \"bold\");\r\n      doc.setFontSize(16);\r\n      doc.setTextColor(0, 102, 204);\r\n      if (yOffset + 20 > pageHeight - margin) {\r\n        doc.addPage();\r\n        yOffset = margin;\r\n      }\r\n      doc.text(title, margin, yOffset);\r\n      yOffset += 5;\r\n\r\n      doc.setLineWidth(0.5);\r\n      doc.setDrawColor(0, 102, 204);\r\n      doc.line(margin, yOffset, pageWidth - margin, yOffset);\r\n      yOffset += 10;\r\n\r\n      doc.setFont(\"helvetica\", \"normal\");\r\n      doc.setFontSize(fontSize);\r\n      doc.setTextColor(0, 0, 0);\r\n      const splitText = doc.splitTextToSize(content, maxWidth);\r\n      splitText.forEach((line) => {\r\n        if (yOffset + 10 > pageHeight - margin) {\r\n          doc.addPage();\r\n          yOffset = margin;\r\n        }\r\n        doc.text(line, margin, yOffset);\r\n        yOffset += 7;\r\n      });\r\n      yOffset += 10;\r\n    };\r\n\r\n    const addChart = () => {\r\n      if (cvChartRef.current)\r\n\r\n {\r\n        try {\r\n          const chart = cvChartRef.current.chartInstance.visualization;\r\n          if (!chart) {\r\n            throw new Error(\"Chart visualization is not available.\");\r\n          }\r\n          const chartImage = chart.getImageURI();\r\n          if (!chartImage) {\r\n            throw new Error(\"Chart image URI is not available.\");\r\n          }\r\n\r\n          if (yOffset + 100 > pageHeight - margin) {\r\n            doc.addPage();\r\n            yOffset = margin;\r\n          }\r\n\r\n          doc.setFont(\"helvetica\", \"bold\");\r\n          doc.setFontSize(16);\r\n          doc.setTextColor(0, 102, 204);\r\n          doc.text(\"CV Skill Gap Chart\", margin, yOffset);\r\n          yOffset += 10;\r\n\r\n          const chartWidth = maxWidth;\r\n          const chartHeight = (chartWidth * 2) / 3;\r\n          doc.addImage(chartImage, \"PNG\", margin, yOffset, chartWidth, chartHeight);\r\n          yOffset += chartHeight + 15;\r\n        } catch (error) {\r\n          console.error(\"Error adding CV chart to PDF:\", error);\r\n          doc.setFont(\"helvetica\", \"normal\");\r\n          doc.setFontSize(12);\r\n          doc.setTextColor(255, 0, 0);\r\n          doc.text(\"Error: Could not include CV Skill Gap Chart in the PDF.\", margin, yOffset);\r\n          yOffset += 10;\r\n        }\r\n      }\r\n    };\r\n\r\n    // Title\r\n    doc.setFont(\"helvetica\", \"bold\");\r\n    doc.setFontSize(22);\r\n    doc.setTextColor(0, 102, 204);\r\n    doc.text(\"PathToGrow CV Analysis Report\", margin, yOffset);\r\n    yOffset += 10;\r\n\r\n    // Subtitle\r\n    doc.setFontSize(12);\r\n    doc.setTextColor(100, 100, 100);\r\n    doc.text(`Generated for ${user.firstName} ${user.lastName} on ${new Date().toLocaleDateString()}`, margin, yOffset);\r\n    yOffset += 15;\r\n\r\n    if (matchScore) {\r\n      addSection(\"CV Match Score\", matchScore);\r\n    }\r\n\r\n    if (cvSkillGapData.skills.length > 0) {\r\n      const cvSkillGapText = cvSkillGapData.skills\r\n        .map((skill, index) => `${skill} - Current: ${cvSkillGapData.current[index]}% Required: ${cvSkillGapData.required[index]}%`)\r\n        .join(\"\\n\");\r\n      addSection(\"CV Skill Gap\", cvSkillGapText);\r\n      addChart();\r\n    }\r\n\r\n    if (cvRecommendations) {\r\n      addSection(\"CV Recommendations\", cvRecommendations);\r\n    }\r\n\r\n    if (suggestedJobs.length > 0) {\r\n      const suggestedJobsText = suggestedJobs\r\n        .map((job) => `${job.title} - ${job.description}`)\r\n        .join(\"\\n\");\r\n      addSection(\"Suggested Job Postings\", suggestedJobsText);\r\n    }\r\n\r\n    doc.save(\"cv_analysis_report.pdf\");\r\n  };\r\n\r\n  const cvChartData = [\r\n    [\"Skill\", \"Current (%)\", \"Required (%)\"],\r\n    ...(cvSkillGapData.skills.map((skill, index) => [\r\n      skill,\r\n      cvSkillGapData.current[index],\r\n      cvSkillGapData.required[index],\r\n    ])),\r\n  ];\r\n\r\n  return (\r\n    <div className=\"dashboard-page py-5\" style={{ backgroundColor: \"#f8f9fa\" }}>\r\n      <Container>\r\n        <Card className=\"shadow mb-5 border-0 rounded\">\r\n          <Card.Body className=\"p-4\">\r\n            <Row className=\"align-items-center\">\r\n              <Col md={2} className=\"text-center\">\r\n                <div\r\n                  className=\"avatar-placeholder bg-primary rounded-circle d-flex align-items-center justify-content-center mx-auto\"\r\n                  style={{ width: \"80px\", height: \"80px\" }}\r\n                >\r\n                  <h2 className=\"text-white m-0\">\r\n                    {user?.firstName?.[0]}\r\n                    {user?.lastName?.[0]}\r\n                  </h2>\r\n                </div>\r\n              </Col>\r\n              <Col md={7}>\r\n                <h3 className=\"fw-bold mb-1\">\r\n                  CV Analysis for {user?.firstName} {user?.lastName}\r\n                </h3>\r\n                <p className=\"text-muted mb-0\">\r\n                  <i className=\"fas fa-envelope me-2\"></i>\r\n                  {user?.email}\r\n                </p>\r\n              </Col>\r\n              <Col md={3} className=\"text-end\">\r\n                <Button\r\n                  variant=\"outline-primary\"\r\n                  className=\"rounded-pill me-2\"\r\n                  onClick={() => navigate(\"/dashboard\")}\r\n                >\r\n                  <i className=\"fas fa-arrow-left me-2\"></i>Back to Dashboard\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        <div className=\"text-center mb-5\">\r\n          <h2 className=\"fw-bold\">CV Analysis</h2>\r\n          <p className=\"text-muted\">Upload your CV and provide a job posting to analyze your fit</p>\r\n        </div>\r\n\r\n        <Card className=\"shadow border-0 mb-5\">\r\n          <Card.Body className=\"p-4\">\r\n            <Form onSubmit={handleCvAnalysis}>\r\n              {cvError && <Alert variant=\"danger\">{cvError}</Alert>}\r\n              <Row>\r\n                <Col md={6}>\r\n                  <Form.Group controlId=\"cvFile\" className=\"mb-3\">\r\n                    <Form.Label className=\"fw-bold\">Upload Your CV (PDF)</Form.Label>\r\n                    <Form.Control\r\n                      type=\"file\"\r\n                      accept=\"application/pdf\"\r\n                      onChange={handleCvFileChange}\r\n                      className=\"py-2\"\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <Form.Group controlId=\"jobPosting\" className=\"mb-3\">\r\n                    <Form.Label className=\"fw-bold\">Job Posting</Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={5}\r\n                      value={jobPosting}\r\n                      onChange={handleJobPostingChange}\r\n                      placeholder=\"Paste the job description here...\"\r\n                      className=\"py-2\"\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <div className=\"d-flex justify-content-between mt-4\">\r\n                <Button variant=\"outline-secondary\" onClick={handleCvReset} disabled={cvLoading}>\r\n                  <i className=\"fas fa-undo me-2\"></i>Reset\r\n                </Button>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  type=\"submit\"\r\n                  disabled={cvLoading}\r\n                >\r\n                  {cvLoading ? (\r\n                    <Spinner animation=\"border\" size=\"sm\" className=\"me-2\" />\r\n                  ) : (\r\n                    <i className=\"fas fa-file-alt me-2\"></i>\r\n                  )}\r\n                  Analyze CV\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        {(matchScore || cvSkillGap || cvRecommendations || suggestedJobs.length > 0) && !cvLoading && (\r\n          <>\r\n            <Row className=\"mb-4\">\r\n              <Col md={6} className=\"mb-4\">\r\n                <Card className=\"shadow border-0 h-100\">\r\n                  <Card.Header className=\"bg-purple text-white py-3\" style={{ backgroundColor: \"#6f42c1\" }}>\r\n                    <h4 className=\"mb-0 fw-bold\">Match Score</h4>\r\n                  </Card.Header>\r\n                  <Card.Body className=\"p-4\" style={{ minHeight: \"150px\" }}>\r\n                    <h5>{matchScore}</h5>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n\r\n              <Col md={6} className=\"mb-4\">\r\n                <Card className=\"shadow border-0 h-100\">\r\n                  <Card.Header className=\"bg-warning text-white py-3\">\r\n                    <h4 className=\"mb-0 fw-bold\">CV Skill Gap</h4>\r\n                  </Card.Header>\r\n                  <Card.Body className=\"p-4\" style={{ minHeight: \"150px\" }}>\r\n                    <ul className=\"list-unstyled\">\r\n                      {cvSkillGapData.skills.map((skill, index) => (\r\n                        <li key={index} className=\"mb-2\" style={{ fontSize: \"1.1rem\" }}>\r\n                          <strong>{skill}</strong> - Current: {cvSkillGapData.current[index]}%, Required: {cvSkillGapData.required[index]}%\r\n                        </li>\r\n                      ))}\r\n                      {cvSkillGapData.skills.length === 0 && (\r\n                        <p className=\"text-muted\">No skill gap data available.</p>\r\n                      )}\r\n                    </ul>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row className=\"mb-4\">\r\n              <Col md={12} className=\"mb-4\">\r\n                <Card className=\"shadow border-0 h-100\">\r\n                  <Card.Header className=\"bg-info text-white py-3\">\r\n                    <h4 className=\"mb-0 fw-bold\">CV Recommendations</h4>\r\n                  </Card.Header>\r\n                  <Card.Body className=\"p-4\" style={{ overflowY: \"auto\", minHeight: \"150px\" }}>\r\n                    {cvRecommendations.split(\"\\n\").map((line, index) => (\r\n                      <p key={index} className=\"mb-2\" style={{ fontSize: \"1.1rem\" }}>\r\n                        {line}\r\n                      </p>\r\n                    ))}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n\r\n            {suggestedJobs.length > 0 && (\r\n              <Row className=\"mb-4\">\r\n                <Col md={12} className=\"mb-4\">\r\n                  <Card className=\"shadow border-0 h-100\">\r\n                    <Card.Header className=\"bg-success text-white py-3\">\r\n                      <h4 className=\"mb-0 fw-bold\">Suggested Job Postings</h4>\r\n                    </Card.Header>\r\n                    <Card.Body className=\"p-4\" style={{ overflowY: \"auto\", minHeight: \"150px\" }}>\r\n                      <ul className=\"list-unstyled\">\r\n                        {suggestedJobs.map((job, index) => (\r\n                          <li key={index} className=\"mb-2\" style={{ fontSize: \"1.1rem\" }}>\r\n                            <strong>{job.title}</strong> - {job.description}\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            )}\r\n\r\n            <Row className=\"mb-5\">\r\n              <Col className=\"text-center\">\r\n                {cvSkillGapData.skills.length > 0 ? (\r\n                  <div className=\"mb-4\">\r\n                    <h4 className=\"fw-bold\">CV Skill Gap Analysis</h4>\r\n                    <Chart\r\n                      ref={cvChartRef}\r\n                      chartType=\"BarChart\"\r\n                      width=\"100%\"\r\n                      height=\"400px\"\r\n                      data={cvChartData}\r\n                      options={{\r\n                        title: \"CV Skill Gap Analysis\",\r\n                        chartArea: { width: \"60%\", height: \"70%\" },\r\n                        hAxis: {\r\n                          title: \"Skill\",\r\n                          titleTextStyle: { color: \"#333\" },\r\n                          textStyle: { fontSize: 12 },\r\n                        },\r\n                        vAxis: {\r\n                          title: \"Percentage (%)\",\r\n                          minValue: 0,\r\n                          maxValue: 100,\r\n                          titleTextStyle: { color: \"#333\" },\r\n                        },\r\n                        legend: { position: \"top\", maxLines: \"2\" },\r\n                        colors: [\"#4285f4\", \"#db4437\"],\r\n                        bar: { groupWidth: \"75%\" },\r\n                        isStacked: false,\r\n                      }}\r\n                      chartEvents={[\r\n                        {\r\n                          eventName: \"ready\",\r\n                          callback: () => {\r\n                            console.log(\"CV Chart is ready!\");\r\n                            setCvChartReady(true);\r\n                          },\r\n                        },\r\n                      ]}\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  <p className=\"text-muted\">No CV skill gap data available for chart visualization.</p>\r\n                )}\r\n                <Button\r\n                  variant=\"primary\"\r\n                  size=\"lg\"\r\n                  onClick={downloadPDF}\r\n                  className=\"rounded-pill px-5 py-2\"\r\n                  disabled={!matchScore || (cvSkillGapData.skills.length > 0 && !cvChartReady)}\r\n                >\r\n                  <i className=\"fas fa-download me-2\"></i>Download Report\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CvAnalysis;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}